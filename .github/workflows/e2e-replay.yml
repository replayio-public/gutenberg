name: End-to-End Tests Playwright

on:
    pull_request:
    workflow_dispatch:
    schedule:
        - cron: '0 0 * * *'
    push:

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
    # The concurrency group contains the workflow name and the branch name for pull requests
    # or the commit hash for any other events.
    group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
    cancel-in-progress: true

jobs:
    record:
        name: E2E Tests (record)
        runs-on: ubuntu-latest
        outputs:
            recordDuration: ${{steps.end.outputs.recordDuration}}
            uploadDuration: ${{steps.end.outputs.uploadDuration}}

        steps:
            - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4

            - name: Use desired version of NodeJS
              uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # v3.1.0
              with:
                  node-version-file: '.nvmrc'
                  cache: npm

            - name: Npm install and build
              run: |
                  npm ci
                  npm run build

            - name: Install WordPress and start the server
              run: |
                  npm run wp-env start

            - name: Set test start
              if: always()
              id: recordStart
              run: echo "time=`date +%s`" >> $GITHUB_OUTPUT

            - name: Run the tests
              run: |
                  npm run test:e2e:playwright:replay

            - name: Set upload start
              if: always()
              id: uploadStart
              run: echo "time=`date +%s`" >> $GITHUB_OUTPUT

            - name: Upload replays
              if: ${{ always() }}
              uses: replayio/action-upload@v0.4.5
              with:
                  api-key: rwk_yQySnIuU2WPV8LrmwIeWiaQNR5OS4Fi25hOeMDf7gRI
                  public: true
                  # filter: ${{ 'function($v) { $v.metadata.test.result = "failed" }' }}

            - name: Set duration in output
              id: end
              if: always()
              run: |
                  echo "recordDuration=$((${{ steps.uploadStart.outputs.time }} - ${{ steps.recordStart.outputs.time }}))" >> $GITHUB_OUTPUT
                  echo "uploadDuration=$((`date +%s` - ${{ steps.uploadStart.outputs.time }}))" >> $GITHUB_OUTPUT

    no-record:
        name: E2E Tests (no record)
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4

            - name: Use desired version of NodeJS
              uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # v3.1.0
              with:
                  node-version-file: '.nvmrc'
                  cache: npm

            - name: Npm install and build
              run: |
                  npm ci
                  npm run build

            - name: Install WordPress and start the server
              run: |
                  npm run wp-env start

            - name: Run the tests
              run: |
                  npm run test:e2e:playwright:replay
              env:
                  RECORD_REPLAY_TEST_METRICS: 1
                  RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}
                  RECORD_REPLAY_NO_RECORD: 1
    original:
        name: E2E Tests
        runs-on: ubuntu-latest
        outputs:
            duration: ${{steps.end.outputs.duration}}

        steps:
            - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4

            - name: Use desired version of NodeJS
              uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # v3.1.0
              with:
                  node-version-file: '.nvmrc'
                  cache: npm

            - name: Npm install and build
              run: |
                  npm ci
                  npm run build

            - name: Install Playwright dependencies
              run: |
                  npx playwright install chromium --with-deps

            - name: Install WordPress and start the server
              run: |
                  npm run wp-env start
            - name: Set test start
              if: always()
              id: start
              run: echo "time=`date +%s`" >> $GITHUB_OUTPUT

            - name: Run the tests
              run: |
                  npm run test:e2e:playwright

            - name: Archive debug artifacts (screenshots, traces)
              uses: actions/upload-artifact@e448a9b857ee2131e752b06002bf0e093c65e571 # v2.2.2
              if: always()
              with:
                  name: failures-artifacts
                  path: artifacts
                  if-no-files-found: ignore

            - name: Archive flaky tests report
              uses: actions/upload-artifact@e448a9b857ee2131e752b06002bf0e093c65e571 # v2.2.2
              if: always()
              with:
                  name: flaky-tests-report-playwright
                  path: flaky-tests
                  if-no-files-found: ignore
            - name: Set duration in output
              if: always()
              id: end
              run: echo "duration=$((`date +%s` - ${{ steps.start.outputs.time }}))" >> $GITHUB_OUTPUT

    upload-benchmarks:
        name: Upload benchmarks
        runs-on: ubuntu-latest
        needs: [record, original]
        if: always()
        steps:
            - run: |
                  echo "Original Duration: ${{ needs.original.outputs.duration }}"
                  echo "Record Duration: ${{ needs.record.outputs.recordDuration }}"
                  echo "Upload Duration: ${{ needs.record.outputs.uploadDuration }}"
            - name: Fetch API Data ðŸ“¦
              uses: JamesIves/fetch-api-data-action@v2
              with:
                  endpoint: 'https://telemetry.replay.io'
                  configuration: '{ "method": "POST", "body": {"event": "Webhook", "source": "metrics", "name": "action-finished", "project": "flake", "originalDuration": "${{ needs.original.outputs.duration }}", "recordDuration": "${{ needs.record.outputs.recordDuration }}", "uploadDuration": "${{ needs.record.outputs.uploadDuration }}"} }'
